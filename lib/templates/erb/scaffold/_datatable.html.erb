<% name_attribute = attributes.find{ |a| a.name == "name" } %>
<% has_name = !!name_attribute %>

<%%- model_class=<%= singular_table_name.titleize %> -%>

<%% id ||=Time.now.to_i %>
<%% remote ||=remote %>
<%% datatable_url ||=datatable_<%= plural_table_name %>_url(remote: remote, format: 'json' ) %>
<%% link_to_new ||=new_<%= singular_table_name %>_url() %>


<!--begin::Wrapper-->
<div class="d-flex flex-stack mb-5">
    <!--begin::Search-->
    <div class="d-flex align-items-center position-relative my-1">
        <i class="ki-duotone ki-magnifier fs-1 position-absolute ms-6"><span class="path1"></span><span class="path2"></span></i>
        <input type="text" data-kt-docs-table-filter="search" class="form-control form-control-solid w-250px ps-15" placeholder="Pesquisar"/>
    </div>
    <!--end::Search-->

    <!--begin::Toolbar-->
    <div class="d-flex justify-content-end" data-kt-docs-table-toolbar="base">
        <!--begin::Add -->
        <%%= link_to link_to_new, class: 'btn btn-primary', data: {bs: {toggle: "tooltip"} }, title: "Adicionar" do %>
            <i class="ki-duotone ki-plus fs-2"></i> Adicionar
        <%% end %>
        <!--end::Add -->
    </div>
    <!--end::Toolbar-->
</div>
<!--end::Wrapper-->

<!--begin::Datatable-->
<div class="table-responsive">
    <table class="table align-middle table-row-dashed fs-6 gy-5" style="width:100%" id="table-<%= plural_table_name %>-<%%= id %>">
        <thead>
            <tr>
                <th>#</th>
                <% attributes.without(name_attribute).each do |attribute| -%>
                    <% unless attribute.name.downcase == 'deleted_at' %>
                        <th><%%= model_class.human_attribute_name(:<%= attribute.name.downcase %>) %></th>
                    <% end %>
                <% end -%>
                <th><%%= model_class.human_attribute_name(:created_at) %></th>
                <th><%%= model_class.human_attribute_name(:updated_at) %></th>
                <th class="text-end min-w-100px"><%%= t("helpers.actions") %></th>
            </tr>
        </thead>
        <tbody class="text-gray-600 fw-semibold"></tbody>
    </table>
</div>
<!--end::Datatable-->
<script type="text/javascript">
    "use strict";

    // Class definition
    var KTDatatablesServerSide = function () {
        // Shared variables
        var table;
        var dt;
        var filterPayment;

        // Private functions
        var initDatatable = function () {
            dt = $("#table-<%= plural_table_name %>-<%%= id %>").DataTable({
                searchDelay: 1000,
                processing: true,
                serverSide: true,
                order: [[0, 'desc']],
                stateSave: true,
                language: {
                    url: 'https://cdn.datatables.net/plug-ins/1.11.5/i18n/pt-BR.json',
                },
                ajax: {
                    url: "<%%= datatable_url %>",
                    type: "POST",
                    beforeSend: function(xhr) {
                        xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'));
                    }
                },
                columns: [
                    { "data": "index", "class": "col-md-1 coluna-index" },
                    <% attributes.without(name_attribute).each do |attribute| -%>
                        <% unless attribute.name.downcase == 'deleted_at' %>
                            { "data": "<%= attribute.name.downcase %>" },
                        <% end %>	
                    <% end %>	
                    { "data": "created_at" },
                    { "data": "updated_at" },
                    { "data": "opcoes", "orderable": false }
                ],
            });

            table = dt.$;
        }

        // Search Datatable --- official docs reference: https://datatables.net/reference/api/search()
        var handleSearchDatatable = function () {
            const filterSearch = document.querySelector('[data-kt-docs-table-filter="search"]');
            filterSearch.addEventListener('keyup', function (e) {
                dt.search(e.target.value).draw();
            });
        }



        // Public methods
        return {
            init: function () {
                initDatatable();
                handleSearchDatatable();
            }
        }
    }();

    // On document ready
    KTUtil.onDOMContentLoaded(function () {
        KTDatatablesServerSide.init();
    });
</script>